{
  "ast": null,
  "code": "import { all, fork, takeLatest, call, put, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\nconst HELLO_SAGA = 'HELLO_SAGA'; //서버에 요청 보내는 부분\n\nfunction loginAPI() {}\n\nfunction* login() {\n  try {\n    yield delay(4);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(LOG_IN);\n  yield put({\n    type: LOG_IN_SUCCESS\n  });\n}\n\n;\nexport default function* userSaga() {\n  yield all(watchLogin(), watchSignUp());\n}",
  "map": {
    "version": 3,
    "sources": ["/home/minsu/바탕화면/sns/ch1/front/sagas/user.js"],
    "names": [
      "all",
      "fork",
      "takeLatest",
      "call",
      "put",
      "take",
      "LOG_IN",
      "LOG_IN_SUCCESS",
      "LOG_IN_FAILURE",
      "HELLO_SAGA",
      "loginAPI",
      "login",
      "delay",
      "type",
      "e",
      "console",
      "error",
      "watchLogin",
      "LOG_IN",
      "userSaga",
      "watchSignUp"
    ],
    "mappings": "AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,IAA3C,QAAuD,oBAAvD;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,cAAjC,QAAuD,kBAAvD;AAEA,MAAMC,UAAU,GAAG,YAAnB,C,CAEA;;AACA,SAASC,QAAT,GAAoB,CAEnB;;AAED,UAAUC,KAAV,GAAkB;AAChB,MAAI;AACF,UAAMC,KAAK,CAAC,CAAD,CAAX;AACA,UAAMR,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEN;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOO,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMV,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUS,UAAV,GAAuB;AACrB,QAAMZ,IAAI,CAACa,MAAD,CAAV;AACA,QAAMd,GAAG,CAAC;AACRS,IAAAA,IAAI,EAAEN;AADE,GAAD,CAAT;AAGD;;AAAA;AAED,eAAe,UAAUY,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CACPiB,UAAU,EADH,EAEPG,WAAW,EAFJ,CAAT;AAID",
    "sourcesContent": [
      "import { all, fork, takeLatest, call, put, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\n\nconst HELLO_SAGA = 'HELLO_SAGA';\n\n//서버에 요청 보내는 부분\nfunction loginAPI() {\n  \n}\n\nfunction* login() {\n  try {\n    yield delay(4);\n    yield put({\n      type: LOG_IN_SUCCESS\n    })\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(LOG_IN);\n  yield put({\n    type: LOG_IN_SUCCESS\n  })\n};\n\nexport default function* userSaga() {\n  yield all(\n    watchLogin(),\n    watchSignUp(),\n  )\n}"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
