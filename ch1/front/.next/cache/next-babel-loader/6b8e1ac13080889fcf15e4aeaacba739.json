{"ast":null,"code":"var _jsxFileName = \"/home/minsu/\\uBC14\\uD0D5\\uD654\\uBA74/sns/ch1/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text\n      }\n    });\n    useEffect(() => {\n      setText('');\n    }, [postAdded === true]);\n  }, []);\n  const onChangeText = useCallback(e => {\n    e.preventDefault();\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    onSubmit: onSubmitForm,\n    style: {\n      margin: \"20px 0 20px 0\"\n    },\n    encType: \"multipart/form-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    masLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    style: {\n      marginTop: \"40px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, imagePaths.map((v, i) => {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: 'http://localhost:3000/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/home/minsu/바탕화면/sns/ch1/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","useSelector","ADD_POST_REQUEST","PostForm","text","setText","imagePaths","isAddingPost","postAdded","state","post","dispatch","useDispatch","onSubmitForm","e","preventDefault","type","data","onChangeText","target","value","margin","marginTop","float","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React, {useCallback, useState, useEffect} from 'react';\nimport { Form, Input, Button } from 'antd'\nimport { useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n\n  const [text, setText] = useState('');\n\n  const { imagePaths, isAddingPost, postAdded } = useSelector( state => state.post )\n  const dispatch = useDispatch();\n\n  const onSubmitForm = useCallback((e) => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text\n      }\n    })\n        useEffect(() => {\n          setText('');\n        }, [postAdded === true])\n  },[])\n\n\n  const onChangeText = useCallback((e) => {\n    e.preventDefault();\n    setText(e.target.value);\n  },[])\n\n  return (\n    <Form onSubmit={onSubmitForm} style={{margin: \"20px 0 20px 0\"}} encType='multipart/form-data'>\n      <Input.TextArea masLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" onChange={onChangeText}/>\n      <div style={{marginTop:\"5px\"}}>\n        <input type=\"file\" multiple hidden />\n        <Button>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: 'right'}} htmlType=\"submit\" loading={isAddingPost}>짹짹</Button>\n      </div>\n      <div style={{marginTop:\"40px\"}}>\n        { imagePaths.map( (v,i) => {\n          return (\n            <div key={v} style={{ display: 'inline-block'}}>\n              <img src={'http://localhost:3000/' + v} style ={{width:'200px'}} alt={v} />\n              <div>\n                <Button>제거</Button>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </Form>\n  )\n}\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}