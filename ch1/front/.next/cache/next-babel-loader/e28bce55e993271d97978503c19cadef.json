{"ast":null,"code":"var _jsxFileName = \"/home/minsu/\\uBC14\\uD0D5\\uD654\\uBA74/sns/ch1/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button, Card, Avatar, Icon } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentForOpened = _useState[1];\n\n  var _useState2 = useState(''),\n      commentText = _useState2[0],\n      setCommentText = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var dispatch = useDispatch();\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(Card, {\n    key: +post.createdAt,\n    cover: post.img && __jsx(\"img\", {\n      alt: \"example\",\n      src: post.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }),\n    actions: [__jsx(Icon, {\n      type: \"retweet\",\n      key: \"retweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"heart\",\n      key: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"message\",\n      key: \"message\",\n      onClick: onToggleComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"ellipsis\",\n      key: \"ellipsis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })],\n    extra: __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\\uC090\\uC57D\")), __jsx(List, {\n    header: \"\".concat(post.Comments ? post.Comments.length : 0, \" \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comment || {},\n    renderItem: function renderItem(Item) {\n      return __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, item.User.nickname[0]),\n        content: item.content,\n        datetime: item.createdAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n};\n\nexport default PostCard;","map":{"version":3,"sources":["/home/minsu/바탕화면/sns/ch1/front/components/PostCard.js"],"names":["React","useState","Button","Card","Avatar","Icon","useSelector","useDispatch","PostCard","post","commentFormOpened","setCommentForOpened","commentText","setCommentText","state","user","me","dispatch","onToggleComment","useCallback","setCommentFormOpened","prev","createdAt","img","User","nickname","content","onSubmitComment","onChangeCommentText","Comments","length","Comment","Item","item"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {  Button, Card, Avatar, Icon } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst PostCard = ({post}) => {\n  const [commentFormOpened, setCommentForOpened] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const { me } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const onToggleComment = useCallback(()=> {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n\n\n  return (\n    <div>\n    <Card\n      key={+post.createdAt}\n      cover={post.img && <img alt=\"example\" src={post.img} />}\n      actions={[\n        <Icon type=\"retweet\" key=\"retweet\" />,\n        <Icon type=\"heart\" key=\"heart\" />,\n        <Icon type=\"message\" key=\"message\" onClick={onToggleComment}/>,\n        <Icon type=\"ellipsis\" key=\"ellipsis\" />\n      ]}\n      extra={<Button>팔로우</Button>}\n    >\n    <Card.Meta \n      avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n      title={post.User.nickname}\n      description={post.content}\n    />\n    </Card>\n      {commentFormOpened && (\n        <>\n          {/* 댓글입력창 */}\n          <Form onSubmit={onSubmitComment}>\n            <Form.Item>\n              <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\n          </Form>\n          {/* 댓글리스트 */}\n          <List \n            header={`${post.Comments ? post.Comments.length : 0} 댓글`}\n            itemLayout =\"horizontal\"\n            dataSource = {post.Comment || {}}\n            renderItem={Item => (\n              <li>\n                <Comment \n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                  content={item.content}\n                  datetime={item.createdAt}\n                />\n              </li>\n            )}\n          />\n        </>  \n      )}\n    </div>\n  )\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}