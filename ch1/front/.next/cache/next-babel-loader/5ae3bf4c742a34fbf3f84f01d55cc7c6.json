{
  "ast": null,
  "code": "import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//dummy User\nconst dummyUser = {\n  nickname: \"윤민수\",\n  Post: [],\n  Followings: [],\n  Followers: []\n}; //intial State\n\nexport const initialState = {\n  isLoggedIn: false,\n  user: null,\n  signupData: {},\n  loginData: {}\n}; //Action 이름정하기\n\nconst LOG_IN = 'LOG_IN';\nconst LOG_OUT = 'LOG_OUT';\nconst SIGN_UP = 'SIGN_UP'; //Action 의 결과 적기\n//여기서 type이 정말 중요하다.\n//data 는 state값에 들어갈 데이터들을 정의해주는 곳이다.\n\nexport const loginAction = data => {\n  return {\n    type: LOG_IN,\n    data: data\n  };\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\nexport const signupAction = data => {\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n}; //reducer 생성\n//반드시 reducer는 action의 값을 받아 initialState를 바꿔주는 역할을 하기에 인자로써, initialState와 action을 넣어준다\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: dummyUser,\n          loginData: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state, {\n          signupData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;",
  "map": {
    "version": 3,
    "sources": ["/home/minsu/바탕화면/sns/ch1/front/reducers/user.js"],
    "names": [
      "dummyUser",
      "nickname",
      "Post",
      "Followings",
      "Followers",
      "initialState",
      "isLoggedIn",
      "user",
      "signupData",
      "loginData",
      "LOG_IN",
      "LOG_OUT",
      "SIGN_UP",
      "loginAction",
      "data",
      "type",
      "logoutAction",
      "signupAction",
      "reducer",
      "state",
      "action"
    ],
    "mappings": ";AAAA;AACA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,KADM;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,UAAU,EAAE,EAHI;AAIhBC,EAAAA,SAAS,EAAE;AAJK,CAAlB,C,CAOA;;AACA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAG,KADa;AAE1BC,EAAAA,IAAI,EAAE,IAFoB;AAG1BC,EAAAA,UAAU,EAAE,EAHc;AAI1BC,EAAAA,SAAS,EAAE;AAJe,CAArB,C,CAOP;;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,OAAO,GAAG,SAAhB,C,CACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO;AACPC,IAAAA,IAAI,EAAEL,MADC;AAEPI,IAAAA,IAAI,EAAEA;AAFC,GAAP;AAID,CALM;AAOP,OAAO,MAAME,YAAY,GAAG;AAC1BD,EAAAA,IAAI,EAAGJ;AADmB,CAArB;AAIP,OAAO,MAAMM,YAAY,GAAIH,IAAD,IAAU;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEH,OADD;AAELE,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM,C,CAOP;AACA;;AACA,MAAMI,OAAO,GAAG,CAAEC,KAAK,GAAGd,YAAV,EAAwBe,MAAxB,KAAoC;AAClD,UAAOA,MAAM,CAACL,IAAd;AACE,SAAKL,MAAL;AAAc;AACZ,iCACKS,KADL;AAEAb,UAAAA,UAAU,EAAE,IAFZ;AAGAC,UAAAA,IAAI,EAAEP,SAHN;AAIAS,UAAAA,SAAS,EAAEW,MAAM,CAACN;AAJlB;AAMH;;AACC,SAAKH,OAAL;AAAe;AACb,iCACKQ,KADL;AAEEb,UAAAA,UAAU,EAAE,KAFd;AAGEC,UAAAA,IAAI,EAAG;AAHT;AAKD;;AAED,SAAKK,OAAL;AAAe;AACb,iCACKO,KADL;AAEEX,UAAAA,UAAU,EAAEY,MAAM,CAACN;AAFrB;AAID;;AAED;AAAS;AACP,iCACKK,KADL;AAGD;AA5BH;AA8BD,CA/BD;;AAiCA,eAAeD,OAAf",
    "sourcesContent": [
      "//dummy User\nconst dummyUser = {\n  nickname: \"윤민수\",\n  Post: [],\n  Followings: [],\n  Followers: []\n}\n\n//intial State\nexport const initialState = {\n  isLoggedIn : false,\n  user: null,\n  signupData: {},\n  loginData: {}\n}\n\n//Action 이름정하기\nconst LOG_IN = 'LOG_IN'\nconst LOG_OUT = 'LOG_OUT'\nconst SIGN_UP = 'SIGN_UP'\n//Action 의 결과 적기\n//여기서 type이 정말 중요하다.\n//data 는 state값에 들어갈 데이터들을 정의해주는 곳이다.\nexport const loginAction = (data) => {\n  return {\n  type: LOG_IN,\n  data: data\n  }\n}\n\nexport const logoutAction = {\n  type : LOG_OUT,\n}\n\nexport const signupAction = (data) => {\n  return {\n    type: SIGN_UP,\n    data: data,\n  }\n}\n\n//reducer 생성\n//반드시 reducer는 action의 값을 받아 initialState를 바꿔주는 역할을 하기에 인자로써, initialState와 action을 넣어준다\nconst reducer = ( state = initialState, action ) => {\n  switch(action.type) {\n    case LOG_IN : {\n      return {\n        ...state,\n      isLoggedIn: true,\n      user: dummyUser,\n      loginData: action.data\n    }\n  } \n    case LOG_OUT : {\n      return {\n        ...state,\n        isLoggedIn: false,\n        user : null\n      }\n    }\n\n    case SIGN_UP : {\n      return {\n        ...state,\n        signupData: action.data\n        }\n    }\n\n    default: {\n      return {\n        ...state,\n      }\n    }  \n  }\n}\n\nexport default reducer;"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
