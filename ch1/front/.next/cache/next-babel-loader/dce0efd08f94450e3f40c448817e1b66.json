{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//dummy User\nconst dummyUser = {\n  nickname: \"윤민수\",\n  Post: [],\n  Followings: [],\n  Followers: []\n}; //intial State\n\nexport const initialState = {\n  isLoggedIn: false,\n  user: null\n}; //Action 이름정하기\n\nconst Log_In = 'Log_In';\nconst Log_Out = 'Log_Out'; //Action 의 결과 적기\n//여기서 type이 정말 중요하다.\n//data 는 state값에 들어갈 데이터들을 정의해주는 곳이다.\n\nexport const loginAction = {\n  type: Log_In\n};\nexport const logoutAction = {\n  type: Log_Out\n}; //reducer 생성\n//반드시 reducer는 action의 값을 받아 initialState를 바꿔주는 역할을 하기에 인자로써, initialState와 action을 넣어준다\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Log_In:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: dummyUser\n        });\n      }\n\n    case Log_Out:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/minsu/바탕화면/sns/ch1/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","initialState","isLoggedIn","user","Log_In","Log_Out","loginAction","type","logoutAction","reducer","state","action"],"mappings":";AAAA;AACA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,KADM;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,UAAU,EAAE,EAHI;AAIhBC,EAAAA,SAAS,EAAE;AAJK,CAAlB,C,CAOA;;AACA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAG,KADa;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB,C,CAKP;;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,OAAO,GAAG,SAAhB,C,CAEA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEH;AADmB,CAApB;AAIP,OAAO,MAAMI,YAAY,GAAG;AAC1BD,EAAAA,IAAI,EAAGF;AADmB,CAArB,C,CAIP;AACA;;AACA,MAAMI,OAAO,GAAG,CAAEC,KAAK,GAAGT,YAAV,EAAwBU,MAAxB,KAAoC;AAClD,UAAOA,MAAM,CAACJ,IAAd;AACE,SAAKH,MAAL;AAAc;AACZ,iCACKM,KADL;AAEAR,UAAAA,UAAU,EAAE,IAFZ;AAGAC,UAAAA,IAAI,EAAEP;AAHN;AAKH;;AACC,SAAKS,OAAL;AAAe;AACb,iCACKK,KADL;AAEER,UAAAA,UAAU,EAAE,KAFd;AAGEC,UAAAA,IAAI,EAAG;AAHT;AAKD;;AACD;AAAS;AACP,iCACKO,KADL;AAGD;AAnBH;AAqBD,CAtBD;;AAwBA,eAAeD,OAAf","sourcesContent":["//dummy User\nconst dummyUser = {\n  nickname: \"윤민수\",\n  Post: [],\n  Followings: [],\n  Followers: [],\n}\n\n//intial State\nexport const initialState = {\n  isLoggedIn : false,\n  user: null\n}\n\n//Action 이름정하기\nconst Log_In = 'Log_In'\nconst Log_Out = 'Log_Out'\n\n//Action 의 결과 적기\n//여기서 type이 정말 중요하다.\n//data 는 state값에 들어갈 데이터들을 정의해주는 곳이다.\nexport const loginAction = {\n  type: Log_In\n}\n\nexport const logoutAction = {\n  type : Log_Out,\n}\n\n//reducer 생성\n//반드시 reducer는 action의 값을 받아 initialState를 바꿔주는 역할을 하기에 인자로써, initialState와 action을 넣어준다\nconst reducer = ( state = initialState, action ) => {\n  switch(action.type) {\n    case Log_In : {\n      return {\n        ...state,\n      isLoggedIn: true,\n      user: dummyUser\n    }\n  } \n    case Log_Out : {\n      return {\n        ...state,\n        isLoggedIn: false,\n        user : null\n      }\n    }\n    default: {\n      return {\n        ...state,\n      }\n    }  \n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}