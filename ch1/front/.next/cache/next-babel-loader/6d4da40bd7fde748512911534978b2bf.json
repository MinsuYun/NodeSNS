{"ast":null,"code":"import { all, fork, takeLatest, call, put, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_OUT, SIGN_UP, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\nconst HELLO_SAGA = 'HELLO_SAGA'; //서버에 요청 보내는 부분\n\nfunction loginAPI() {}\n\nfunction* login() {\n  try {\n    yield delay(4);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(LOG_IN);\n  yield put({\n    type: LOG_IN_SUCCESS\n  });\n}\n\n;\nexport default function* userSaga() {\n  yield all(watchLogin(), watchSignUp());\n}","map":{"version":3,"sources":["/home/minsu/바탕화면/sns/ch1/front/sagas/user.js"],"names":["all","fork","takeLatest","call","put","take","LOG_IN","LOG_OUT","SIGN_UP","LOG_IN_SUCCESS","LOG_IN_FAILURE","HELLO_SAGA","loginAPI","login","delay","type","e","console","error","watchLogin","userSaga","watchSignUp"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,IAA3C,QAAuD,oBAAvD;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAoCC,cAApC,EAAoDC,cAApD,QAA0E,kBAA1E;AAEA,MAAMC,UAAU,GAAG,YAAnB,C,CAEA;;AACA,SAASC,QAAT,GAAoB,CAEnB;;AAED,UAAUC,KAAV,GAAkB;AAChB,MAAI;AACF,UAAMC,KAAK,CAAC,CAAD,CAAX;AACA,UAAMV,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAEN;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOO,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMZ,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAEL;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUS,UAAV,GAAuB;AACrB,QAAMd,IAAI,CAACC,MAAD,CAAV;AACA,QAAMF,GAAG,CAAC;AACRW,IAAAA,IAAI,EAAEN;AADE,GAAD,CAAT;AAGD;;AAAA;AAED,eAAe,UAAUW,QAAV,GAAqB;AAClC,QAAMpB,GAAG,CACPmB,UAAU,EADH,EAEPE,WAAW,EAFJ,CAAT;AAID","sourcesContent":["import { all, fork, takeLatest, call, put, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_OUT, SIGN_UP,  LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\n\nconst HELLO_SAGA = 'HELLO_SAGA';\n\n//서버에 요청 보내는 부분\nfunction loginAPI() {\n  \n}\n\nfunction* login() {\n  try {\n    yield delay(4);\n    yield put({\n      type: LOG_IN_SUCCESS\n    })\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(LOG_IN);\n  yield put({\n    type: LOG_IN_SUCCESS\n  })\n};\n\nexport default function* userSaga() {\n  yield all(\n    watchLogin(),\n    watchSignUp(),\n  )\n}"]},"metadata":{},"sourceType":"module"}