{"ast":null,"code":"var _jsxFileName = \"/home/minsu/\\uBC14\\uD0D5\\uD654\\uBA74/sns/ch1/front/pages/signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux'; // import { signupAction } from '../reducers/user';\n\nconst Signup = () => {\n  const dispatch = useDispatch(); //state 기본\n  //state를 처음 설정할 때는 기본적으로 useState를 통해 초기 셋팅을 한다.\n\n  const {\n    0: id,\n    1: setId\n  } = useState('');\n  const {\n    0: nickname,\n    1: setNickname\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false); //state 에러상황\n\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: SIGN_UP_REQUEST\n    }); //검증로직\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log({\n      id,\n      nickname,\n      password,\n      passwordCheck,\n      term\n    });\n  }, [password, passwordCheck, term]);\n  const onChangeId = useCallback(e => {\n    setId(e.target.value);\n  }, []);\n  const onChangeNickname = useCallback(e => {\n    setNickname(e.target.value);\n  }, []);\n  const onChangePassword = useCallback(e => {\n    setPassword(e.target.value);\n  }, []);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-id\",\n    required: true,\n    value: id,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nickname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-nickname\",\n    required: true,\n    value: nickname,\n    onChange: onChangeNickname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password\",\n    required: true,\n    value: password,\n    type: \"password\",\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-passwordCheck\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-passwordCheck\",\n    required: true,\n    type: \"password\",\n    value: passwordCheck,\n    onChange: onChangePasswordCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    value: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4\"), termError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/home/minsu/바탕화면/sns/ch1/front/pages/signup.js"],"names":["React","useState","useCallback","Form","Input","Button","Checkbox","useSelector","useDispatch","Signup","dispatch","id","setId","nickname","setNickname","password","setPassword","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","onSubmit","e","preventDefault","type","SIGN_UP_REQUEST","console","log","onChangeId","target","value","onChangeNickname","onChangePassword","onChangePasswordCheck","onChangeTerm","checked","padding","color"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { signupAction } from '../reducers/user';\n\nconst Signup = () => {\n\n  const dispatch = useDispatch();\n  //state 기본\n  //state를 처음 설정할 때는 기본적으로 useState를 통해 초기 셋팅을 한다.\n  const [id, setId] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordCheck, setPasswordCheck] = useState('');\n  const [term, setTerm] = useState(false);\n  //state 에러상황\n  const [passwordError, setPasswordError] = useState(false);\n  const [termError, setTermError] = useState(false);\n\n  const onSubmit = useCallback((e) => {\n    e.preventDefault()\n    dispatch({\n      type: SIGN_UP_REQUEST\n    });\n    //검증로직\n    if(password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if(!term) {\n      return setTermError(true);\n    }\n    console.log(\n      {id, nickname, password, passwordCheck, term}\n    )\n  }, [password, passwordCheck, term]);\n\n  const onChangeId = useCallback ((e) => {\n    setId(e.target.value);\n  },[]);\n\n  const onChangeNickname = useCallback((e) => {\n    setNickname(e.target.value);\n  },[]);\n\n  const onChangePassword = useCallback ((e) => {\n    setPassword(e.target.value);\n  },[]);\n\n  const onChangePasswordCheck = useCallback( (e) => {\n    setPasswordError(e.target.value !== password );\n    setPasswordCheck(e.target.value);\n  },[password]);\n\n  const onChangeTerm = useCallback((e) => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  },[]);\n  \n\n  return (\n    <>\n    <Form onSubmit={onSubmit} style={{padding:\"20px\"}}>\n      <div>\n        <label htmlFor=\"user-id\">아이디</label>\n        <br />\n        <Input name=\"user-id\" required value={id} onChange={onChangeId} />\n      </div>\n      <div>\n        <label htmlFor=\"user-nickname\">닉네임</label>\n        <br />\n        <Input name=\"user-nickname\" required value={nickname} onChange={onChangeNickname} />\n      </div>\n      <div>\n        <label htmlFor=\"user-password\">비밀번호</label>\n        <br />\n        <Input name=\"user-password\" required value={password} type=\"password\" onChange={onChangePassword} />\n      </div>\n      <div>\n        <label htmlFor=\"user-passwordCheck\">비밀번호 확인</label>\n        <br />\n        <Input name=\"user-passwordCheck\" required type=\"password\" value={passwordCheck} onChange={onChangePasswordCheck} />\n        {passwordError && <div style={{color:\"red\"}}>비밀번호가 일치하지 않습니다</div>}\n      </div>\n      <div>\n        <Checkbox name=\"user-term\" value={term} onChange={onChangeTerm}>약관에 동의합니다</Checkbox>\n        {termError && <div style={{color:\"red\"}}>약관에 동의하셔야 합니다</div>}\n      </div>\n      <div>\n        <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n      </div>\n    </Form>\n    </>\n  )\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}