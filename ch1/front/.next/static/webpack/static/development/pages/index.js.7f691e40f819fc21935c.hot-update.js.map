{"version":3,"file":"static/webpack/static/development/pages/index.js.7f691e40f819fc21935c.hot-update.js","sources":["webpack:///./sagas/user.js"],"sourcesContent":["import { all, fork, takeLatest, call, put, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_OUT, SIGN_UP,  LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\n//put은 dispatch = action을 받아서 실행하는 놈\n//take는 action을 받는 놈\n\n\nconst HELLO_SAGA = 'HELLO_SAGA';\n\n//서버에 요청 보내는 부분\nfunction loginAPI() {\n  \n}\n\nfunction* login() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS\n    })\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(LOG_IN);\n  yield put({\n    type: LOG_IN_SUCCESS\n  })\n};\n\nexport default function* userSaga() {\n  yield all(\n    watchLogin(),\n    watchSignUp(),\n  )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAaA;;;AAcA;;;AAOA;AACA;AAnCA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AACA;AADA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAOA;AAPA;AAQA;AACA;AADA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAEA;AACA;AADA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}