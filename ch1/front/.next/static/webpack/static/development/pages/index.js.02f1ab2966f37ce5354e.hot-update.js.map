{"version":3,"file":"static/webpack/static/development/pages/index.js.02f1ab2966f37ce5354e.hot-update.js","sources":["webpack:///./components/PostCard.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {  Button, Card, Avatar, Icon, Form, Input, List, Comment } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post'\n\nconst PostCard = ({post}) => {\n  const [commentFormOpened, setCommentForOpened] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const { me } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const onToggleComment = useCallback(()=> {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n\n  const onSubmitComment = useCallback((e)=> {\n    e.preventDefault();\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n    })\n  },[]) \n\n  const onSubmitCommentText = useCallback((e)=>{\n    e.preventDefault();\n    setCommentText(e.target.value)\n  },[])\n\n\n  return (\n    <div>\n    <Card\n      key={+post.createdAt}\n      cover={post.img && <img alt=\"example\" src={post.img} />}\n      actions={[\n        <Icon type=\"retweet\" key=\"retweet\" />,\n        <Icon type=\"heart\" key=\"heart\" />,\n        <Icon type=\"message\" key=\"message\" onClick={onToggleComment}/>,\n        <Icon type=\"ellipsis\" key=\"ellipsis\" />\n      ]}\n      extra={<Button>팔로우</Button>}\n    >\n    <Card.Meta \n      avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n      title={post.User.nickname}\n      description={post.content}\n    />\n    </Card>\n      {commentFormOpened && (\n        <>\n          {/* 댓글입력창 */}\n          <Form onSubmit={onSubmitComment}>\n            <Form.Item>\n              <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\n          </Form>\n          {/* 댓글리스트 */}\n          <List \n            header={`${post.Comments ? post.Comments.length : 0} 댓글`}\n            itemLayout =\"horizontal\"\n            dataSource = {post.Comment || {}}\n            renderItem={Item => (\n              <li>\n                <Comment \n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                  content={item.content}\n                  datetime={item.createdAt}\n                />\n              </li>\n            )}\n          />\n        </>  \n      )}\n    </div>\n  )\n}\n\nexport default PostCard;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;;;;A","sourceRoot":""}