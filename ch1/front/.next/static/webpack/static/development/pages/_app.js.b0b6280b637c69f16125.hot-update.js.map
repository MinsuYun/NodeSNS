{"version":3,"file":"static/webpack/static/development/pages/_app.js.b0b6280b637c69f16125.hot-update.js","sources":["webpack:///./sagas/user.js"],"sourcesContent":["//put은 dispatch = action을 받아서 실행하는 놈\n//take는 action을 받는 놈\n\n//takeEvery 는 모든 action을 다 받고 실행\n//takeLatest는 이전 요청이 끝나지 않은게 있다면 이전 요청을 취소함\n//--> 보통 로그인 버튼 여러번 클릭하면 서버에 계속 전송 되는 걸 막을 때 사용 됨\n\n//takeEvery VS takeLatest\n//--> takeEvery의 경우 모든 이벤트를 모두 유효처리 할 때, takeLatest는 앞선 이벤트들은 모두 실수라 보고 마지막 이벤트만 유효처리할 때\n\n//call과 fork 모두 함수 실행 메서드\n//call은 동기호출(보통 서버와 통신할 때 주로 쓰임)\n//fork는 비동기호출\nimport { all, fork, call, takeLatest, takeEvery, put, take, delay } from 'redux-saga/effects';\n\n//서버로 갔다 와야하는 비동기처리 Action들은 SAGA에서 모두 처리 해준다\nimport { \n  LOG_IN_REQUEST, \n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE } from '../reducers/user';\n  \nimport axios from 'axios';\n\n//서버에 요청 보내는 부분\nfunction loginAPI() {\n  return axios.post('/login')\n}\n\nfunction* logIn(action) {\n  try {\n    // yield call(loginAPI);\n    console.log(1122221)\n    yield delay(2000)\n    yield put({\n      type: LOG_IN_SUCCESS,\n    })\n  } catch(e) {\n    console.log(e)\n    yield put({\n      type: LOG_IN_FAILURE,\n    })\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeEvery(LOG_IN_REQUEST, logIn);\n};\n\nfunction signUpAPI() {\n  //서버에 요청을 보내는 부분\n  return axios.post('/signup')\n}\n\nfunction* signUp() {\n  try {\n    // yield call(signUpAPI)\n\n\n    yield put({\n      type: SIGN_UP_SUCCESS\n    })\n  } catch(e) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    })\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery( SIGN_UP_REQUEST, signUp )\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchSignUp),\n  ])\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA+BA;;;AAgBA;;;AASA;;;AAgBA;;;AAIA;AACA;AA7EA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAIA;AACA;AALA;AAAA;AAKA;AACA;AADA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AATA;AAUA;AACA;AADA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AADA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}