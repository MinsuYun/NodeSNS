{"version":3,"file":"static/webpack/static/development/pages/signup.js.16a4c1b3e4fdcd4e1531.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SIGN_UP_REQUEST } from '../reducers/user'\n\nconst Signup = () => {\n\n  const dispatch = useDispatch();\n  //state 기본\n  //state를 처음 설정할 때는 기본적으로 useState를 통해 초기 셋팅을 한다.\n  const [id, setId] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordCheck, setPasswordCheck] = useState('');\n  const [term, setTerm] = useState(false);\n  //state 에러상황\n  const [passwordError, setPasswordError] = useState(false);\n  const [termError, setTermError] = useState(false);\n\n  const onSubmit = useCallback((e) => {\n    e.preventDefault()\n    dispatch({\n      type: SIGN_UP_REQUEST\n    });\n    //검증로직\n    if(password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if(!term) {\n      return setTermError(true);\n    }\n    console.log(\n      {id, nickname, password, passwordCheck, term}\n    )\n  }, [password, passwordCheck, term]);\n\n  const onChangeId = useCallback ((e) => {\n    setId(e.target.value);\n  },[]);\n\n  const onChangeNickname = useCallback((e) => {\n    setNickname(e.target.value);\n  },[]);\n\n  const onChangePassword = useCallback ((e) => {\n    setPassword(e.target.value);\n  },[]);\n\n  const onChangePasswordCheck = useCallback( (e) => {\n    setPasswordError(e.target.value !== password );\n    setPasswordCheck(e.target.value);\n  },[password]);\n\n  const onChangeTerm = useCallback((e) => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  },[]);\n  \n\n  return (\n    <>\n    <Form onSubmit={onSubmit} style={{padding:\"20px\"}}>\n      <div>\n        <label htmlFor=\"user-id\">아이디</label>\n        <br />\n        <Input name=\"user-id\" required value={id} onChange={onChangeId} />\n      </div>\n      <div>\n        <label htmlFor=\"user-nickname\">닉네임</label>\n        <br />\n        <Input name=\"user-nickname\" required value={nickname} onChange={onChangeNickname} />\n      </div>\n      <div>\n        <label htmlFor=\"user-password\">비밀번호</label>\n        <br />\n        <Input name=\"user-password\" required value={password} type=\"password\" onChange={onChangePassword} />\n      </div>\n      <div>\n        <label htmlFor=\"user-passwordCheck\">비밀번호 확인</label>\n        <br />\n        <Input name=\"user-passwordCheck\" required type=\"password\" value={passwordCheck} onChange={onChangePasswordCheck} />\n        {passwordError && <div style={{color:\"red\"}}>비밀번호가 일치하지 않습니다</div>}\n      </div>\n      <div>\n        <Checkbox name=\"user-term\" value={term} onChange={onChangeTerm}>약관에 동의합니다</Checkbox>\n        {termError && <div style={{color:\"red\"}}>약관에 동의하셔야 합니다</div>}\n      </div>\n      <div>\n        <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n      </div>\n    </Form>\n    </>\n  )\n}\n\nexport default Signup;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AALA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}